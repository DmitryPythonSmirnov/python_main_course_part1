"""
Реализовать класс «Дата», функция-конструктор которого должна принимать дату в виде строки формата «день-месяц-год».
В рамках класса реализовать два метода. Первый, с декоратором @classmethod, должен извлекать число, месяц, год и
преобразовывать их тип к типу «Число». Второй, с декоратором @staticmethod, должен проводить валидацию числа, месяца
и года (например, месяц — от 1 до 12). Проверить работу полученной структуры на реальных данных.
"""


class Date:
    def __init__(self, date):
        self.date = date

    @classmethod
    def extract_date(cls, date):
        day, month, year = date.split("-")
        try:
            day = int(day)
            month = int(month)
            year = int(year)
        except ValueError:
            return "День, месяц и год должны быть цифрами."

        return day, month, year

    @staticmethod
    def check_date(date_tuple):
        if 31 >= date_tuple[0] >= 0 and 12 >= date_tuple[1] >= 1 and 2021 >= date_tuple[2] >= 1:
            return "Значения дня, месяца и года входят в диапазон допустимых цифр."
        else:
            return "Значения дня, месяца и года НЕ входят в диапазон допустимых цифр."


date_1 = Date("15-01-2021")

# Просто возвращаем строку с датой в том виде, как она была передана при создании объекта
print(f"Полученная дата: {date_1.date}")

# Вызываем метод класса для извлечения даты по цифрам
print("День: {0}, месяц: {1}, год: {2}.".format(*Date.extract_date(date_1.date)))

# Вызываем статический метод для проверки валидности дня, месяца и года
# Передаём статическому методу результат вызовы метода класса (tuple)
print(Date.check_date(Date.extract_date(date_1.date)))
