# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, matrix_list):
        self.matrix = matrix_list

    def __str__(self):
        result_list = []  # Итоговый одномерный список из строк
        for item in self.matrix:
            # Преобразуем каждый элемент в item в str, делаем список из элементов str, из списка делаем строку
            # с пробелами между элементами, добавляем строку в результирующий список
            result_list.append(" ".join(list(map(str, item))))
        # Возвращаем строку из элементов result_list, с переводом строки между элементами
        # В этом варианте после последнего элемента матрицы нет перевода строки,
        # и нет пробелов после самых правых элементов
        return "\n".join(result_list)

    def __add__(self, other):
        # Проверка на одинаковое количество вложенных списков в двух матрицах
        if len(self.matrix) != len(other.matrix):
            return "В марицах должно быть одинаковое количество строк (вложенных списков)!"

        # Проверка на одинаковые размеры вложенных списков между матрицами
        for i in range(len(self.matrix)):
            if len(self.matrix[i]) != len(other.matrix[i]):
                return "Вложенные списки обеих матриц должны быть одинакового размера!"

        # Сложение матриц
        result_matrix = []
        for i in range(len(self.matrix)):
            temp_list = []
            for j in range(len(self.matrix[i])):
                k = self.matrix[i][j] + other.matrix[i][j]
                temp_list.append(k)
            result_matrix.append(temp_list)

        return Matrix(result_matrix)


matrix_1 = Matrix([[1, 2], [3, 4], [5, 6]])
matrix_2 = Matrix([[11, 12], [13, 14], [15, 16]])
print(matrix_1)
print()
print(matrix_2)
print()
print(matrix_1 + matrix_2)
